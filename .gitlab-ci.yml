stages:
  - build
  - test
  - scheduled-test
  - generate-report
  - upload-report
variables:
  HTTP_PROXY: "http://194.138.0.19:9400"
  HTTPS_PROXY: "http://194.138.0.19:9400"
  NO_PROXY: "140.231.89.119"
  
Build Test Suite:
  stage: build
  tags:
    - docker
  image: maven:3-openjdk-18
  variables:
    MAVEN_OPTS: "-Dhttps.proxyHost=hk1.coia.siemens.net -Dhttps.proxyPort=9400 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository"
  script:
    - mvn clean
    - mvn package -Pnotest
  cache:
    paths:
      - .m2/repository/
  artifacts:
    paths:
      - target/semantic-monitoring-*-SNAPSHOT.jar

Run Tests:
  stage: test
  tags:
    - docker
  only:
    variables:
      - $DL_PROJECT
      - $DL_ENV
  stage: test
  image: openjdk:8-jdk-alpine
  script:
    - apk update && apk add zip curl
    - curl --noproxy '*' -u$PACKAGES_ROBOT_USER:$PACKAGES_ROBOT_PASSWORD -O "https://packages.digitsphere.siemens.cloud/artifactory/data-layer-generic/data-layer-automation/$DL_PROJECT/$DL_ENV/allure-report.zip" 
    - unzip allure-report.zip || true
    - curl -O https://repo1.maven.org/maven2/org/aspectj/aspectjweaver/1.9.2/aspectjweaver-1.9.2.jar
    - set +e
    - java -javaagent:aspectjweaver-1.9.2.jar -cp target/semantic-monitoring-0.0.1-SNAPSHOT.jar com.siemens.devops.monitoring.Main $DL_PROJECT_PARAM $DL_ENV_PARAM; export exit_code=$?; if [ $exit_code -ne 0 ]; then echo "There are failed test cases"; fi;
    - if [ -d allure-report/history ]; then cp -r allure-report/history allure-results/history; else true; fi
    - zip -r allure-results.zip allure-results
    - exit $exit_code
  artifacts:
    paths:
      - allure-results
      - allure-results.zip
      - target/semantic-monitoring-*-SNAPSHOT.jar
    when: always

Generate Allure Report:
  stage: generate-report
  tags:
    - docker
  only:
    variables:
      - $DL_PROJECT
      - $DL_ENV
  image: frankescobar/allure-docker-service
  variables:
    MAVEN_OPTS: "-Dhttps.proxyHost=hk1.coia.siemens.net -Dhttps.proxyPort=9400"
  script:
    - allure generate allure-results
  artifacts:
    paths:
      - allure-report
  when: always

Allure Server:
  stage: upload-report
  tags:
    - docker
  only:
    variables:
      - $DL_PROJECT
      - $DL_ENV
  image: openjdk:8-jdk-alpine
  script:
    - apk update && apk add curl jq
    - export DL_UUID=$(curl --noproxy '*' --location --request POST http://$DL_ALLURE_SERVER:$DL_ALLURE_PORT/api/result --form 'allureResults=@./allure-results.zip;type=application/zip' 2>/dev/null | jq -r '.uuid')
    - echo DL_UUID=$DL_UUID
    - export RESULT_UUID=$(curl --noproxy '*' --location --request POST http://$DL_ALLURE_SERVER:$DL_ALLURE_PORT/api/report --header 'Content-Type:application/json' --data-raw '{"reportSpec":{"path":['\"$DL_PROJECT\"','\"$DL_ENV\"'],"executorInfo":{"buildName":'\"$DL_PROJECT-$DL_ENV\"'}},"results":['\"$DL_UUID\"'],"deleteResults":"true"}' 2>/dev/null | jq -r '.uuid')
    - echo RESULT_UUID=$RESULT_UUID
    - java -cp target/semantic-monitoring-0.0.1-SNAPSHOT.jar com.siemens.devops.monitoring.Main -sendReport http://$DL_ALLURE_SERVER:$DL_ALLURE_PORT/allure/reports/$RESULT_UUID $DL_PROJECT-$DL_ENV
  needs:
    - Run Tests
  when: always

Artifactory:
  stage: upload-report
  tags:
    - docker
  only:
    variables:
      - $DL_PROJECT
      - $DL_ENV
  image: alpine
  script:
    - apk update && apk add zip curl
    - zip -r allure-report.zip allure-report
    - export MD5SUM=$(md5sum allure-report.zip | awk '{print $1}')
    - export SHA1SUM=$(sha1sum allure-report.zip | awk '{print $1}')
    - curl  --noproxy '*' -u$PACKAGES_ROBOT_USER:$PACKAGES_ROBOT_PASSWORD --header "X-Checksum-Sha1:${SHA1SUM}" --header "X-Checksum-MD5:${MD5SUM}" -T allure-report.zip "https://packages.digitsphere.siemens.cloud/artifactory/data-layer-generic/data-layer-automation/$DL_PROJECT/$DL_ENV/allure-report.zip"
  artifacts:
    paths:
      - allure-report.zip
  when: always
  