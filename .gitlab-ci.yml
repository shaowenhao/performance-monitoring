stages:
  - build
  - containerize
  - deploy
  
variables:
  project_name: monitor
  helm_chart: ${HELM_PILOT_CHART_NAME}
  helm_chart_version: ${DATA_LAYER_CHART_VERSION}-${project_name}-${CI_COMMIT_REF_SLUG}
  HTTP_PROXY: "http://194.138.0.1:9400/"
  HTTPS_PROXY: "http://194.138.0.1:9400/"
  http_proxy: "http://194.138.0.1:9400/"
  https_proxy: "http://194.138.0.1:9400/"
  NO_PROXY: loadbalancer.ssi.com,140.231.89.84,140.231.89.119,code.siemens.com,docker.siemens.com,*.siemens.*
  no_proxy: loadbalancer.ssi.com,140.231.89.119,code.siemens.com,docker.siemens.com,*.siemens.*

build-artifact:
  stage: build
  tags:
    - docker
  image: 140.231.89.84:30003/ctsharp-datalayer/data-layer-gitlab-runner:${RUNNER_IMAGE_VERSION}
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .m2/repository
  variables:
    MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  script:
    - cd ${CI_PROJECT_DIR}
    - mvn clean package -Dmaven.test.skip=true -s $MAVEN_SETTINGS
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    paths:
      - ${CI_PROJECT_DIR}/target/*.jar

build-image:
  stage: containerize
  tags:
    - docker
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - cd ${CI_PROJECT_DIR}
    - cp ${CI_PROJECT_DIR}/target/*.jar .
    - echo "{\"auths\":{\"$HARBOR_ADDRESS\":{\"username\":\"$HARBOR_USER\",\"password\":\"$HARBOR_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context . --skip-tls-verify --build-arg jarName=$(ls|grep jar) --dockerfile Dockerfile --destination=${DOCKER_REPO_PREFIX}${CI_PROJECT_NAME}:${CI_COMMIT_REF_SLUG}
  only:
    - dev
    - test

release-by-tag:
  stage: containerize
  tags:
    - docker
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - cp target/*.jar .
    - echo "{\"auths\":{\"$HARBOR_ADDRESS\":{\"username\":\"$HARBOR_USER\",\"password\":\"$HARBOR_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context . --skip-tls-verify --build-arg jarName=$(ls|grep jar) --destination=${DOCKER_REPO_PREFIX}${CI_PROJECT_NAME}:${CI_COMMIT_REF_NAME}
  only:
    - tags
    
#update-helm:
#  stage: deploy
#  tags:
#    - docker
#  image: 140.231.89.84:30003/ctsharp-datalayer/data-layer-gitlab-runner:latest
#  script:
#    - helm repo add --ca-file ${HELM_REPO_CA} --username=${HELM_REPO_USERNAME} --password=${HELM_REPO_PASSWORD} ${HELM_REPO_NAME} ${HELM_REPO}
#    - helm plugin list
#    - helm repo update
#    - helm fetch --version ${helm_chart_version} ${HELM_REPO_NAME}/${helm_chart}
#    - tar xvf ${helm_chart}-${helm_chart_version}.tgz
#    - yq w -i ${helm_chart}/values.yaml images.${CI_PROJECT_NAME}.timeStamp  $(date "+%Y%m%d%H%M")
#    - helm push --ca-file ${HELM_REPO_CA} --username=${HELM_REPO_USERNAME} --password=${HELM_REPO_PASSWORD} ./${helm_chart}/ --version=${helm_chart_version} ${HELM_REPO_NAME}
#    - helm repo update
#    - helm upgrade -i --atomic -n=${project_name}-${CI_COMMIT_REF_NAME} --ca-file ${HELM_REPO_CA} --username=${HELM_REPO_USERNAME} --password=${HELM_REPO_PASSWORD} --version=${helm_chart_version} ${helm_chart} ${HELM_REPO_NAME}/${helm_chart}
#  only:
#    - dev
#    - test
